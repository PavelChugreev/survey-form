{"version":3,"sources":["webpack://survey/./js/modules/create-form.js","webpack://survey/./js/modules/post.js","webpack://survey/./js/script.js","webpack://survey/webpack/bootstrap","webpack://survey/webpack/runtime/define property getters","webpack://survey/webpack/runtime/hasOwnProperty shorthand","webpack://survey/webpack/runtime/make namespace object","webpack://survey/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qB;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,6BAA6B;;AAEzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,eAAe,GAAG,kBAAkB;AACpG;AACA,8CAA8C,WAAW;AACzD;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qCAAqC,eAAe,GAAG,kBAAkB;AACzE;AACA,8CAA8C,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,MAAM;AAC9C,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,C;;;;;;;;;;;;;;;;;;AChLA;AACe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,MAAM;;AAEnC;AACA,iDAAiD,GAAG,MAAM,IAAI,GAAG,MAAM;AACvE;AACA,mDAAmD,MAAM;AACzD,+CAA+C,MAAM;AACrD,sDAAsD,MAAM;AAC5D,0DAA0D,MAAM;AAChE,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,KAAK;AACL,C;;;;;;;;;;;;;;;;ACvD+C;AACb;;AAElC;AACA,IAAI,6DAAU;AACd,IAAI,sDAAI;AACR,CAAC,E;;;;;;UCND;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"bundle.js","sourcesContent":["export default function createForm() {\r\n    const push = document.querySelector(\".push\");\r\n    const form = document.querySelector(\".form\");\r\n    let itemsNum = document.querySelectorAll(\".form-item\").length;\r\n\r\n    const range = `   от <input type=\"number\" name=\"from\" id=\"\">\r\n                    до <input type=\"number\" name=\"to\" id=\"\">  `;\r\n    const type = `   <select name=\"type\" id=\"type\">\r\n                        <option value=\"standart\">Standart</option>\r\n                        <option value=\"silver\">Silver</option>\r\n                        <option value=\"gold\">Gold</option>\r\n                    </select>   `;\r\n    const activStatus = `  <select name=\"status\" id=\"status\">\r\n                        <option value=\"activ\">Активна</option>\r\n                        <option value=\"no-active\">Неактивна</option>\r\n                    </select>   `;\r\n\r\n    class Condition {\r\n        constructor(num) {\r\n            this.num = num;\r\n        }\r\n        render() {\r\n            const formItem = document.createElement(\"div\");\r\n            let rangeNum = formItem.querySelectorAll(\".range\").length;\r\n            this.num = document.querySelectorAll(\".form-item\").length;\r\n\r\n            formItem.setAttribute(\"id\", this.num + 1);\r\n            formItem.classList.add(\"form-item\");\r\n            formItem.innerHTML =\r\n                `\r\n            <div class=\"and\">И</div>\r\n            <div class=\"condition\">\r\n                <span>Условие ${this.num + 1}</span>\r\n                <select name=\"condition\" id=\"condition\">\r\n                    <option value=\"choose\">Выберете условие</option>\r\n                    <option value=\"age\">Возраст респондента</option>\r\n                    <option value=\"type\">Тип карты лояльности</option>\r\n                    <option value=\"status\">Статус карты лояльности</option>\r\n                </select>\r\n            </div>\r\n            <div class=\"range-wrapper\">\r\n            </div>\r\n            <div class=\"item-buttons\">\r\n                <div class=\"add-btn\">\r\n                    <button class=\"hide\"></button>\r\n                </div>\r\n                <div class=\"del-btn\">\r\n                <i class=\"fas fa-trash-alt\"></i> <span>Удалить условие</span> \r\n                </div>\r\n            </div>\r\n        `;\r\n            form.append(formItem);\r\n            itemsNum++;\r\n\r\n            function changeDecoration(){\r\n                const formItems = document.querySelectorAll(\".form-item\");\r\n                formItems.forEach((item, i) => {\r\n                    const id = item.getAttribute(\"id\");\r\n                    if(id == 1){\r\n                        item.querySelector(\".and\").style.display = \"none\";\r\n                    } \r\n\r\n                    if(id%2){\r\n                        item.classList.remove(\"blue\");\r\n                        item.classList.add(\"pink\");\r\n                    } else {\r\n                        item.classList.remove(\"pink\");\r\n                        item.classList.add(\"blue\");\r\n                    }\r\n                });\r\n            }\r\n            changeDecoration();\r\n\r\n            const addBtn = formItem.querySelector(\".add-btn\");\r\n            const delBtn = formItem.querySelector(\".del-btn\");\r\n            const select = formItem.querySelector('select');\r\n\r\n            delBtn.addEventListener(\"click\", () => {\r\n                formItem.remove();\r\n                itemsNum--;\r\n                rangeNum = 0;\r\n                setNum(\".form-item\", \".condition span\");\r\n                changeDecoration();\r\n            });\r\n\r\n            select.addEventListener(\"change\", () => {\r\n                const rangeWrap = formItem.querySelector('.range-wrapper');\r\n                rangeWrap.innerHTML = \"\";\r\n                rangeNum = 0;\r\n                if (select.value == \"age\") {\r\n                    createRange();\r\n                    addBtn.removeEventListener(\"click\", createType);\r\n                    addBtn.removeEventListener(\"click\", createStatus);\r\n                    addBtn.addEventListener(\"click\", createRange);\r\n                }\r\n                else if (select.value == \"type\") {\r\n                    createType();\r\n                    addBtn.removeEventListener(\"click\", createRange);\r\n                    addBtn.removeEventListener(\"click\", createStatus);\r\n                    addBtn.addEventListener(\"click\", createType);\r\n                }\r\n                else if (select.value == \"status\") {\r\n                    createStatus();\r\n                    addBtn.removeEventListener(\"click\", createType);\r\n                    addBtn.removeEventListener(\"click\", createRange);\r\n                    addBtn.addEventListener(\"click\", createStatus);\r\n                }\r\n                else {\r\n                    const btn = formItem.querySelector(\"button\");\r\n                    btn.classList.add(\"hide\");\r\n                }\r\n            });\r\n\r\n            class Range {\r\n                constructor(rangeNum, condition, inner) {\r\n                    this.rangeNum = rangeNum;\r\n                    this.condition = condition;\r\n                    this.inner = inner;\r\n                }\r\n                render() {\r\n                    const btn = formItem.querySelector(\"button\");\r\n                    btn.classList.remove(\"hide\");\r\n                    btn.innerHTML = `<i class=\"fas fa-plus\"></i> Добавить ${this.condition.toLowerCase()}`;\r\n\r\n                    const rangeWrap = formItem.querySelector(\".range-wrapper\");\r\n                    const range = document.createElement(\"div\");\r\n                    range.classList.add(\"range\");\r\n                    range.setAttribute(\"id\", this.rangeNum + 1);\r\n                    if (rangeNum > 0) {\r\n                        range.innerHTML =\r\n                            `   \r\n                        <div class=\"range-title\">\r\n                            <span><span class=\"or\">или</span> ${this.condition} ${this.rangeNum + 1}</span>\r\n                        </div>\r\n                        <div class=\"inputs\">${this.inner}</div>\r\n                    `;\r\n                    } else {\r\n                        range.innerHTML =\r\n                            `\r\n                        <div class=\"range-title\">\r\n                            <span> ${this.condition} ${this.rangeNum + 1}</span>\r\n                        </div>\r\n                        <div class=\"inputs\">${this.inner}</div>\r\n                    `;\r\n                    }\r\n                    rangeWrap.append(range);\r\n                    rangeNum++;\r\n                }\r\n            }\r\n\r\n            function createRange() {\r\n                new Range(rangeNum, 'Диапазон', range).render();\r\n            }\r\n            function createType() {\r\n                new Range(rangeNum, 'Тип', type).render();\r\n            }\r\n            function createStatus() {\r\n                new Range(rangeNum, 'Статус', activStatus).render();\r\n            }\r\n        }\r\n    }\r\n\r\n    function setNum(parentSelector, selector) {\r\n        let items = document.querySelectorAll(parentSelector);\r\n        items.forEach((item, i) => {\r\n            item.setAttribute(\"id\", i + 1);\r\n            let cond = item.querySelector(selector);\r\n            cond.innerText = `Условие ${i + 1}`;\r\n        });\r\n    }\r\n\r\n    new Condition(itemsNum).render();\r\n    push.addEventListener(\"click\", () => {\r\n        setNum(\".form-item\", \".condition span\");\r\n        new Condition(itemsNum).render();\r\n    });\r\n}","//before posting init json-server (data-base.json) \r\nexport default function post() {\r\n    let data = {};\r\n\r\n    function createData() {\r\n        let items = document.querySelectorAll(\".form-item\");\r\n\r\n        items.forEach((item, i) => {\r\n            let inpsFrom = item.querySelectorAll(\"input[name='from']\");\r\n            let inpsTo = item.querySelectorAll(\"input[name='to']\");\r\n            let selectsType = item.querySelectorAll(\"#type\");\r\n            let selectsStatus = item.querySelectorAll(\"#status\");\r\n\r\n            data[`formItem-${i + 1}`] = {};\r\n\r\n            function setValue(arr, key, id) {\r\n                arr.forEach((item, i) => data[`${id}`][`${key}-${i + 1}`] = item.value);\r\n            }\r\n            setValue(inpsFrom, \"from\", `formItem-${i + 1}`);\r\n            setValue(inpsTo, 'to', `formItem-${i + 1}`);\r\n            setValue(selectsType, \"type\", `formItem-${i + 1}`);\r\n            setValue(selectsStatus, 'status', `formItem-${i + 1}`);\r\n        });\r\n    }\r\n\r\n    const postData = async (url, data) => {\r\n        const res = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\"\r\n            },\r\n            body: data\r\n        });\r\n        return await res.json();\r\n    };\r\n\r\n    const nextBtn = document.querySelector(\".next-btn button\");\r\n    const testBtn = document.querySelector(\".test-btn button\");\r\n    nextBtn.addEventListener(\"click\", () => createData());\r\n\r\n    testBtn.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();\r\n\r\n        createData();\r\n        const json = JSON.stringify(data);\r\n\r\n        postData(\"http://localhost:3000/requests\", json)\r\n            .then(data => {\r\n                console.log(data);\r\n            }).catch(() => {\r\n                console.log(\"error\");\r\n            }).finally(() => {\r\n                console.log(\"reset\");\r\n            });\r\n    });\r\n}","import createForm from \"./modules/create-form\";\r\nimport post from \"./modules/post\";\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n    createForm();\r\n    post();\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./js/script.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}